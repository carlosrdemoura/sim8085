---
const {
  adSlot,
  layout = null, // e.g., "in-article"
  format = "fluid", // default
  fullWidthResponsive = true,
  textAlign = "center", // for layout styles
  style = null,
} = Astro.props;

const pubId = import.meta.env.PUBLIC_ADSENSE_PUB_ID ? `ca-${import.meta.env.PUBLIC_ADSENSE_PUB_ID}` : null;
const isAdReady = !!(pubId && adSlot);

const computedStyle = style ?? `display:block; text-align:${textAlign};`;
---

{!isAdReady ? (
  <div
    class="w-[728px] h-[90px] border border-red-500 bg-red-100 flex items-center justify-center text-red-700 text-sm"
    style="font-family: sans-serif;"
  >
    Ad placeholder (728x90) â€” missing publisher ID
  </div>
) : (
  <div
    x-data="adsenseBlock"
    class="relative"
  >
    <ins
      class="adsbygoogle"
      style={computedStyle}
      data-ad-client={pubId}
      data-ad-slot={adSlot}
      data-ad-format={format}
      {...(layout ? { 'data-ad-layout': layout } : {})}
      data-full-width-responsive={fullWidthResponsive ? "true" : "false"}
    ></ins>
  </div>
)}

<script>
  import Alpine from "alpinejs";
  import { shouldLoadAds, loadAdSenseScript } from "../lib/adsense.js";

  document.addEventListener("alpine:init", () => {
    Alpine.data("adsenseBlock", () => {
      let ref: HTMLElement | null = null;
      let retries = 0;
      let pushStatus = "NOT_STARTED";

      function track(event, props = {}) {
        if (window.posthog) posthog.capture(event, props);
      }

      function tryPush() {
        if (!ref) {
          if (retries++ < 10) return setTimeout(tryPush, 200);
          pushStatus = "NOT_STARTED";
          return;
        }

        if (ref.offsetWidth > 0) {
          try {
            (window.adsbygoogle = window.adsbygoogle || []).push({});
            pushStatus = "SUCCESS";
            track("ad pushed");
          } catch (e) {
            console.warn("Ad push error", e);
            track("ad push failed", { error: e.message });
            pushStatus = "NOT_STARTED";
          }
        } else if (retries < 10) {
          retries++;
          setTimeout(tryPush, 500);
        } else {
          console.warn("Ad never became visible.");
          pushStatus = "NOT_STARTED";
        }
      }

      return {
        init() {
            ref = this.$el.querySelector("ins.adsbygoogle");

            if (!ref) return;

            const pubId = ref.dataset.adClient;
            const adSlot = ref.dataset.adSlot;

            if (!pubId || !adSlot) return;

            const country = localStorage.getItem("user_country");
            const consent = localStorage.getItem("cookie_consent");

            if (shouldLoadAds(country, consent)) {
                loadAdSenseScript(pubId, {
                    onLoad: () => {
                        tryPush();
                    },
                });
            } else {
                window.addEventListener("adsConsentGiven", (e) => {
                const { consent } = e.detail || {};
                if (consent === "yes") {
                    loadAdSenseScript(pubId, {
                        onLoad: () => {
                            tryPush();
                        },
                    });
                }
                });
            }
        },
      };
    });
  });
</script>
