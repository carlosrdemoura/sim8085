<div
    x-data="cookieBanner"
    x-show="showBanner"
    class="z-[9999] fixed bottom-20 md:bottom-0 right-0 w-[80vw] md:w-[30vw] max-w-[500px] text-sm md:text-base p-4 m-4 rounded-md bg-secondary-background border border-secondary-border shadow-lg"
    style="display: none;"
>
    <p class="mb-2 text-sm">
        This site uses cookies to ensure the best experience for our users.
    </p>
    <p class="mb-4 text-sm">
        By continuing, you agree to the use of cookies.
    </p>
    <div class="flex items-center gap-4">
        <button @click="acceptCookies()" title="Thank You" class="consent-button text-sm text-white rounded border border-green-foreground text-primary-foreground bg-terminal-700 hover:bg-terminal">Got it</button>
        <button @click="declineCookies()" title="Really?" class="text-secondary-foreground text-sm hover:text-active-foreground">Skip</button>
    </div>
</div>

<script>
    import Alpine from 'alpinejs';

    const useTracking = document.querySelector('meta[name="posthog-use-tracking"]')?.content === "true";

    async function getCountry() {
        const cached = localStorage.getItem('user_country');
        if (cached) return cached;
        try {
            const res = await fetch('/api/location/');
            const data = await res.json();
            localStorage.setItem('user_country', data.country);
            return data.country;
        } catch (e) {
            return '';
        }
    }

    getCountry();

    document.addEventListener('alpine:init', () => {
        Alpine.data('cookieBanner', () => ({
            showBanner: false,
            init() {
                const storedCountry = localStorage.getItem('user_country');
                const storedConsent = localStorage.getItem('cookie_consent');

                if (storedCountry && storedConsent) {
                    window.dispatchEvent(new CustomEvent('adsConsentGiven', { detail: { country: storedCountry, consent: storedConsent } }));
                    return;
                }

                requestIdleCallback(() => {
                    setTimeout(async () => {
                        const storedConsent = localStorage.getItem('cookie_consent');
                        this.showBanner = useTracking && !storedConsent;
                    }, 1500);
                });
            },
            async acceptCookies() {
                const country = await getCountry();
                localStorage.setItem('cookie_consent', 'yes');
                window.dispatchEvent(new CustomEvent('adsConsentGiven', { detail: { country, consent: 'yes' } }));
                this.showBanner = false;
                if (window.posthog) {
                    posthog.set_config({ persistence: 'localStorage+cookie' });
                    import('./identify.js').then(mod => mod.identifyUser());
                }
            },

            async declineCookies() {
                const country = await getCountry();
                localStorage.setItem('cookie_consent', 'no');
                window.dispatchEvent(new CustomEvent('adsConsentGiven', { detail: { country, consent: 'no' } }));
                this.showBanner = false;
                import('./identify.js').then(mod => mod.identifyUser());
            }
        }));
    });
</script>
<style>
    @reference "tailwindcss";
    .consent-button {
        @apply px-4;
        @apply py-2;
        @apply cursor-pointer;
        @apply rounded;
    }
</style>
